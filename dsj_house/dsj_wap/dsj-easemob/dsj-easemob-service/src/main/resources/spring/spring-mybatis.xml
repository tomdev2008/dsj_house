<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- 基于Druid数据库链接池的数据源配置 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本属性driverClassName、 url、user、password -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${data.jdbc.url}" />
		<property name="username" value="${data.jdbc.username}" />
		<property name="password" value="${data.jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<!-- 通常来说，只需要修改initialSize、minIdle、maxActive -->
		<property name="initialSize" value="2" />
		<property name="minIdle" value="2" />
		<property name="maxActive" value="30" />
		<property name="testWhileIdle" value="false" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="5000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="30000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 解密密码必须要配置的项 
		<property name="filters" value="config" />
		<property name="connectionProperties" value="config.decrypt=true" />
		-->
	</bean>
	
	<!-- 将数据源映射到sqlSessionFactory中  MyBatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.fanthful"/>
        <property name="mapperLocations" value="classpath:com/eqiao/store/modules/*/mapper/*.xml"/>
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
    </bean>

	<!-- SqlSession模板类实例 -->
	<bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="close">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!--======= 事务配置 Begin ================= -->
	<!-- 事务管理器（由Spring管理MyBatis的事务） -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 关联数据源 -->
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 配置事务的传播特性  -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="create*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="persist*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="merge*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="set*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="do*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="batch*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="init*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="*" read-only="true"/>		
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置事务切面 -->
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.fanthful.modules.*.service.impl.*ServiceImpl.*(..))" advice-ref="txAdvice" />
		<aop:advisor pointcut="execution(* com.fanthful.common.core.service.BaseServiceImpl.*(..))" advice-ref="txAdvice" />
	</aop:config>
	<!--======= 事务配置 End =================== -->

</beans>